---
## FOR CENTOS ##
- name: Add the user 'ansible' with a bash shell, appending the group 'admin' to the user's groups
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /bin/bash
    groups: wheel
    update_password: on_create
    append: yes
  with_items:
    - "{{ users }}"
  when: ansible_facts['os_family'] == "RedHat"

- name: Make sure group wheel is not in the sudoers configuration
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: /usr/sbin/visudo -cf %s
  when: ansible_facts['os_family'] == "RedHat"

## FOR DEBIAN ##
- name: Add the user 'ansible' with a bash shell, appending the group 'admin' to the user's groups
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /bin/bash
    groups: sudo
    update_password: on_create
    append: yes
  with_items:
    - '{{ users }}'
  when: ansible_facts['os_family'] == "Debian" and "Ubuntu"

- name: Make sure group wheel is not in the sudoers configuration
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: /usr/sbin/visudo -cf %s
  when: ansible_facts['os_family'] == "Debian" and "Ubuntu"

#### Ensure public keys are present ####

# - name: Set authorized keys taken from url
#   ansible.posix.authorized_key:
#     user: ansible
#     state: present
#     key: "{{ sshkey_url }}"



# - name: Set up multiple authorized keys
#   ansible.posix.authorized_key:
#     user: deploy
#     state: present
#     key: '{{ item }}'
#   with_file:
#     - public_keys/doe-jane
#     - public_keys/doe-john

# ## SSH PUB KEY ##
# - name: Create authorized_keys file
#   file:
#     path: home/{{ item.username }}/.ssh/authorized_keys
#     owner: "{{ item.username }}"
#     group: "{{ item.username }}"
#     mode: '0644'
#   with_items:
#     - "{{ init_setup_CentOS_users }} or {{ init_setup_Ubuntu_users }}"

# - name: ssh-copy-id
#   lineinfile:
#     path: home/{{ item.username }}/.ssh/authorized_keys
#     line: "{{ init_setup_ssh_public_key }}"
#   with_items:
#     - "{{ init_setup_CentOS_users }} or {{ init_setup_Ubuntu_users }}"


# ## CREATE SSH KEY PAIR ##
# - name: Create a ed25519 SSH key for user
#   user:
#     name: "{{ item.username }}"
#     generate_ssh_key: yes
#     ssh_key_file: .ssh/id_ed25519
#     ssh_key_type: ed25519
#     ssh_key_comment: Provisioned_by_Ansible
#   with_items:
#     - "{{ init_setup_CentOS_users }} or {{ init_setup_Ubuntu_users }}"

